(defvar vibrantThemes `["theme-1", "theme-2"]`)
(defvar lightThemes `["theme-1", "theme-2"]`)
(defvar darkThemes `["theme-1", "theme-2", "theme-3"]`)
(defvar lightThemesPath "themes/light")
(defvar darkThemesPath "themes/dark")
(defvar vibrantThemesPath "themes/vibrant")
(defvar increaseVibrantCommand `"eww open theme --arg currentVibrantTheme=$\{(currentVibrantTheme + 1)%arraylength(vibrantThemes)\} --arg currentDarkTheme=0 --arg currentLightTheme=0"`)
(defvar decreaseVibrantCommand `eww open theme --arg currentVibrantTheme=${(currentVibrantTheme + 1)%arraylength(vibrantThemes)} --arg currentDarkTheme=0 --arg currentLightTheme=0`)
(defvar resetVibrantCommand `eww open theme --arg currentVibrantTheme=${(currentVibrantTheme + 1)%arraylength(vibrantThemes)} --arg currentDarkTheme=0 --arg currentLightTheme=0`)

(defvar increaseDarkCommand `eww open theme --arg currentVibrantTheme=${(currentVibrantTheme + 1)%arraylength(vibrantThemes)} --arg currentDarkTheme=0 --arg currentLightTheme=0`)
(defvar decreaseDarkCommand `eww open theme --arg currentVibrantTheme=${(currentVibrantTheme + 1)%arraylength(vibrantThemes)} --arg currentDarkTheme=0 --arg currentLightTheme=0`)
(defvar resetDarkCommand `eww open theme --arg currentVibrantTheme=${(currentVibrantTheme + 1)%arraylength(vibrantThemes)} --arg currentDarkTheme=0 --arg currentLightTheme=0`)


(defvar increaseLightCommad `eww open theme --arg currentVibrantTheme=${(currentVibrantTheme + 1)%arraylength(vibrantThemes)} --arg currentDarkTheme=0 --arg currentLightTheme=0`)
(defvar decreaseLightCommand `eww open theme --arg currentVibrantTheme=${(currentVibrantTheme + 1)%arraylength(vibrantThemes)} --arg currentDarkTheme=0 --arg currentLightTheme=0`)
(defvar resetLightCommand `eww open theme --arg currentVibrantTheme=${(currentVibrantTheme + 1)%arraylength(vibrantThemes)} --arg currentDarkTheme=0 --arg currentLightTheme=0`)


(defwidget theme_root [currentLightTheme currentDarkTheme currentVibrantTheme]
  (box
    :class "themes-container "
    :space-evenly false
    :orientation "vertical"
    :valign "center"
    (label
      :class "themes-header"
      :text "How are you feeling today?"
    )
    (box
      :class "themes-emotions-container"
      (button
        :onclick "${increaseVibrantCommand} && cp ${vibrantThemesPath}/${vibrantThemes[currentVibrantTheme]}.scss themes/variables.scss"
        :onrightclick "${decreaseVibrantCommand} && cp ${vibrantThemesPath}/${vibrantThemes[currentVibrantTheme]}.scss themes/variables.scss"
        :class "themes-emotion"
        :onmiddleclick "${resetVibrantCommand} && cp ${vibrantThemesPath}/${vibrantThemes[currentVibrantTheme]}.scss themes/variables.scss"
        "üé®"
      )
      (button
        :onclick "eww open theme --arg currentLightTheme=${(currentLightTheme
          + 1)%arraylength(lightThemes)} --arg currentDarkTheme=0 --arg currentVibrantTheme=0 && cp ${lightThemesPath}/${lightThemes[currentLightTheme]}.scss themes/variables.scss"
        :onrightclick "${decreaseLightCommand} && cp ${lightThemesPath}/${lightThemes[currentLightTheme]}.scss themes/variables.scss"
        :onmiddleclick "${resetLightCommand} && cp ${lightThemesPath}/${lightThemes[currentLightTheme]}.scss themes/variables.scss"
        :class "themes-emotion"
        "üçÄ"
      )
      (button
        :onclick "${increaseDarkCommand} && cp ${darkThemesPath}/${darkThemes[currentDarkTheme]}.scss themes/variables.scss"
        :onrightclick "${increaseDarkCommand} && cp ${darkThemesPath}/${darkThemes[currentDarkTheme]}.scss themes/variables.scss"
        :onmiddleclick "${resetDarkCommand} && cp ${darkThemesPath}/${darkThemes[currentDarkTheme]}.scss themes/variables.scss"
        :class "themes-emotion"
        "üóø"
      )
    )
  )
)